name: Build Docker and Optional Push

on:
  push:
    branches:
      - main
      - dev
      - demo
      - hotfix
      - 'release/*'
  pull_request:
    types:
      - opened
      - ready_for_review
      - reopened
      - synchronize
    branches:
      - main
      - dev
      - demo
      - hotfix
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component:
          - name: ContentProcessor
            context: src/ContentProcessor
            dockerfile: Dockerfile
          - name: ContentProcessorAPI
            context: src/ContentProcessorAPI
            dockerfile: Dockerfile
          - name: ContentProcessorWeb
            context: src/ContentProcessorWeb
            dockerfile: Dockerfile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Azure Container Registry
        if: ${{ (github.ref_name == 'main' || github.ref_name == 'dev' || github.ref_name == 'demo' || github.ref_name == 'hotfix') }}
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set Docker image tag
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "TAG=dev" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/demo" ]]; then
            echo "TAG=demo" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/hotfix" ]]; then
            echo "TAG=hotfix" >> $GITHUB_ENV
          else
            echo "TAG=pullrequest-ignore" >> $GITHUB_ENV
          fi
      
      - name: Build Docker image for ${{ matrix.component.name }}
        run: |
          cd ${{ matrix.component.context }}
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.component.name }}:${{ env.TAG }} -f ${{ matrix.component.dockerfile }} .
      
      - name: Backup Docker image for ${{ matrix.component.name }}
        if: ${{ env.TAG != 'pullrequest-ignore' }}
        run: |
          # Ensure the backup registry URL is set (e.g., via repository secret BACKUP_ACR_LOGIN_SERVER)
          docker tag ${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.component.name }}:${{ env.TAG }} ${{ secrets.BACKUP_ACR_LOGIN_SERVER }}/${{ matrix.component.name }}:${{ env.TAG }}
          docker push ${{ secrets.BACKUP_ACR_LOGIN_SERVER }}/${{ matrix.component.name }}:${{ env.TAG }}
          echo "${{ matrix.component.name }} image backed up successfully."
      
      - name: Build and push Docker image for ${{ matrix.component.name }}
        run: |
          if [[ "${{ env.TAG }}" == "latest" || "${{ env.TAG }}" == "dev" || "${{ env.TAG }}" == "demo" || "${{ env.TAG }}" == "hotfix" ]]; then
            docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.component.name }}:${{ env.TAG }}
            echo "${{ matrix.component.name }} image built and pushed successfully."
          else
            echo "Skipping Docker push for ${{ matrix.component.name }} with tag: ${{ env.TAG }}"
          fi
