name: Build Docker and Optional Push

on:
  push:
    branches:
      - main
      - dev
      - demo
      - hotfix
  pull_request:
    types:
      - opened
      - ready_for_review
      - reopened
      - synchronize
    branches:
      - main
      - dev
      - demo
      - hotfix
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Azure Container Registry
        if: ${{ (github.ref_name == 'main' || github.ref_name == 'dev' || github.ref_name == 'demo' || github.ref_name == 'hotfix') }}
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set Docker image tag
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "TAG=dev" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/demo" ]]; then
            echo "TAG=demo" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/hotfix" ]]; then
            echo "TAG=hotfix" >> $GITHUB_ENV
          else
            echo "TAG=pullrequest-ignore" >> $GITHUB_ENV
          fi
      
      - name: Build and push ContentProcessor Docker image
        run: |
          cd src/ContentProcessor
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/ContentProcessor:${{ env.TAG }} -f Dockerfile .
          if [[ "${{ env.TAG }}" == "latest" || "${{ env.TAG }}" == "dev" || "${{ env.TAG }}" == "demo" || "${{ env.TAG }}" == "hotfix" ]]; then
            docker push ${{ secrets.ACR_LOGIN_SERVER }}/ContentProcessor:${{ env.TAG }}
            echo "ContentProcessor image built and pushed successfully."
          else
            echo "Skipping Docker push for ContentProcessor with tag: ${{ env.TAG }}"
          fi

      - name: Build and push ContentProcessorAPI Docker image
        run: |
          cd src/ContentProcessorAPI
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/ContentProcessorAPI:${{ env.TAG }} -f Dockerfile .
          if [[ "${{ env.TAG }}" == "latest" || "${{ env.TAG }}" == "dev" || "${{ env.TAG }}" == "demo" || "${{ env.TAG }}" == "hotfix" ]]; then
            docker push ${{ secrets.ACR_LOGIN_SERVER }}/ContentProcessorAPI:${{ env.TAG }}
            echo "ContentProcessorAPI image built and pushed successfully."
          else
            echo "Skipping Docker push for ContentProcessorAPI with tag: ${{ env.TAG }}"
          fi

      - name: Build and push ContentProcessorWeb Docker image
        run: |
          cd src/ContentProcessorWeb
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/ContentProcessorWeb:${{ env.TAG }} -f Dockerfile .
          if [[ "${{ env.TAG }}" == "latest" || "${{ env.TAG }}" == "dev" || "${{ env.TAG }}" == "demo" || "${{ env.TAG }}" == "hotfix" ]]; then
            docker push ${{ secrets.ACR_LOGIN_SERVER }}/ContentProcessorWeb:${{ env.TAG }}
            echo "ContentProcessorWeb image built and pushed successfully."
          else
            echo "Skipping Docker push for ContentProcessorWeb with tag: ${{ env.TAG }}"
          fi
